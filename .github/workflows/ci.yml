name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MIX_ENV: test

jobs:
  lint-and-test:
    runs-on: ubuntu-20.04
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ["25.0.4"]
        elixir: ["1.14.2"]
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: db_reflect
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

        ports:
          - "6661:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 1s
          --health-retries 30
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: db_reflect
          MYSQL_ROOT_PASSWORD: mysql

        ports:
          - "6662:3306"

    steps:
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-
      # - run: rm -rf _build
      # - run: rm -rf deps
      - run: mix deps.get
      - run: mix deps.compile
      - run: mix format --check-formatted

      # # just before tests we try waiting on containers, at this moment they are probably already up and running
      # - name: psql_wait
      #   run: |
      #     set -o errexit;
      #     c=0;
      #     for i in `seq 30`; do
      #       echo "psql_wait"
      #       psql --host localhost --username postgres --dbname template1 -c 'select * from information_schema.tables;' > /dev/null && c=0 && break || c=$? && sleep 1
      #     done;
      #     exit $c

      # - name: mysql_wait
      #   run: |
      #     set -o errexit;
      #     c=0;
      #     for i in `seq 30`; do
      #       echo "mysql_wait"
      #       mysql --execute 'select * from information_schema.tables;' > /dev/null > /dev/null && c=0 && break || c=$? && sleep 1
      #     done;
      #     exit $c
      - run: mix test
